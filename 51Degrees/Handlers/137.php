<?php
/**
 * @file
 * Auto Generated Code - DO NOT EDIT
 *
 * See http://51degrees.mobi/Support/Documentation/PHP#AutoGeneratedSourceCode for more details.*
 */

/**
 * See LICENSE.TXT for terms of use and copyright.
 */

/**
 * Calculates the matching score between the two strings for this handler.
 *
 * &$target string
 *   The string we're trying to find the closest value to.
 * $test string
 *   The string that we're testing against.
 * $ls integer
 *   The lowest score we've found so far.
 * return integer
 *   The score between the two strings.
 */
function E137($target, $test, $ls) {
  $score = 0;
  fiftyone_degrees_calculate_segment_score($target[0], $test[0], $ls, 10000, $score);
  if ($score == PHP_INT_MAX) {
    return PHP_INT_MAX;
  }
  fiftyone_degrees_calculate_segment_score($target[1], $test[1], $ls, 10000, $score);
  if ($score == PHP_INT_MAX) {
    return PHP_INT_MAX;
  }
  return $score;
}

/**
 * Returns the details of the devices that are closest to the
 * useragent string provided.
 *
 * $useragent string
 *   The useragent we're trying to find.
 * return array
 *   An array of device details for the closest devices.
 */
function _H137($useragent) {

  $ls = PHP_INT_MAX;
  $dl = array();

  // Calculate the segments for the useragent.
  $segments = array(
    0 => fiftyone_degrees_preg_match_all('#Kylo/\\d\\.\\d#', $useragent),
    1 => fiftyone_degrees_preg_match_all('#Mac OS X \\d+(_|\\.)\\d#', $useragent));
  $ns = E137($segments, array(0 => array(0 => 'Kylo/1.1'), 1 => NULL), $ls);
  if ($ns <= $ls) {
    if ($ns < $ls) {
      unset($dl);
    }
    $dl[] = array(53173,117309,817728,913, 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:12.0) Gecko/X Firefox/12.0 Kylo/1.1.1', '15364-7133-22538-18092');
    $ls = $ns;
  }
  $ns = E137($segments, array(0 => array(0 => 'Kylo/1.1'), 1 => NULL), $ls);
  if ($ns <= $ls) {
    if ($ns < $ls) {
      unset($dl);
    }
    $dl[] = array(53173,53254,817728,913, 'Mozilla/5.0 (Windows NT 5.1; rv:12.0) Gecko/X Firefox/12.0 Kylo/1.1.1', '15364-5690-22538-18092');
    $ls = $ns;
  }
  $ns = E137($segments, array(0 => array(0 => 'Kylo/1.0'), 1 => NULL), $ls);
  if ($ns <= $ls) {
    if ($ns < $ls) {
      unset($dl);
    }
    $dl[] = array(53173,117309,754872,913, 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:5.0) Gecko/X Firefox/5.0 Kylo/1.0.1.76141', '15364-7133-22537-18092');
    $ls = $ns;
  }
  $ns = E137($segments, array(0 => array(0 => 'Kylo/1.1'), 1 => NULL), $ls);
  if ($ns <= $ls) {
    if ($ns < $ls) {
      unset($dl);
    }
    $dl[] = array(53173,66762,817728,913, 'Mozilla/5.0 (Windows NT 6.0; rv:12.0) Gecko/X Firefox/12.0 Kylo/1.1.1', '15364-17285-22538-18092');
    $ls = $ns;
  }
  $ns = E137($segments, array(0 => array(0 => 'Kylo/1.1'), 1 => NULL), $ls);
  if ($ns <= $ls) {
    if ($ns < $ls) {
      unset($dl);
    }
    $dl[] = array(53173,309102,817728,913, 'Mozilla/5.0 (Windows NT 6.2; WOW64; rv:12.0) Gecko/X Firefox/12.0 Kylo/1.1.1', '15364-16110-22538-18092');
    $ls = $ns;
  }
  $ns = E137($segments, array(0 => array(0 => 'Kylo/0.8'), 1 => NULL), $ls);
  if ($ns <= $ls) {
    if ($ns < $ls) {
      unset($dl);
    }
    $dl[] = array(53173,117309,661176,913, 'Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.2) Gecko/X Firefox/3.6 Kylo/0.8.4.74873', '15364-7133-22536-18092');
    $ls = $ns;
  }
  $ns = E137($segments, array(0 => array(0 => 'Kylo/1.0'), 1 => NULL), $ls);
  if ($ns <= $ls) {
    if ($ns < $ls) {
      unset($dl);
    }
    $dl[] = array(53173,53254,754872,913, 'Mozilla/5.0 (Windows NT 5.1; rv:5.0) Gecko/X Firefox/5.0 Kylo/1.0.1.76141', '15364-5690-22537-18092');
    $ls = $ns;
  }
  $ns = E137($segments, array(0 => array(0 => 'Kylo/1.0'), 1 => array(0 => 'Mac OS X 10.6')), $ls);
  if ($ns <= $ls) {
    if ($ns < $ls) {
      unset($dl);
    }
    $dl[] = array(62443,193931,754872,913, 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:2.0) Gecko/X Firefox/4.0 Kylo/1.0.1.76141', '17595-17296-22537-18092');
    $ls = $ns;
  }
  $ns = E137($segments, array(0 => array(0 => 'Kylo/1.0'), 1 => NULL), $ls);
  if ($ns <= $ls) {
    if ($ns < $ls) {
      unset($dl);
    }
    $dl[] = array(53173,66762,754872,913, 'Mozilla/5.0 (Windows NT 6.0; rv:5.0) Gecko/X Firefox/5.0 Kylo/1.0.1.76141', '15364-17285-22537-18092');
    $ls = $ns;
  }
  $ns = E137($segments, array(0 => array(0 => 'Kylo/0.8'), 1 => array(0 => 'Mac OS X 10.6')), $ls);
  if ($ns <= $ls) {
    if ($ns < $ls) {
      unset($dl);
    }
    $dl[] = array(62443,193931,661176,913, 'Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10.6; en-US; rv:1.9.2) Gecko/X Firefox/3.6 Kylo/0.8.4.74873', '17595-17296-22536-18092');
    $ls = $ns;
  }
  return $dl;
}
